package stringapi;

public class StringTest_02 {

	public static void main(String[] args) {
		String str = "i have a dream, a song to sing!";
		
		// 1) 문자열의 길이를 구하여 반환
		int size = str.length();
		System.out.println("문자열의 길이: " + size);
		
		// 2) 전달된 인덱스 위치의 문자 한 개를 반환
		char ch = str.charAt(0);
		System.out.println(ch);
		
		// 3) 현재 문자열과 주어진 문자열을 사전식으로 비교 -> 현재가 앞서면 음수, 같으면 0, 뒤라면 양수
		String s = "Kprea!";
		String t = "Korea!";
		
		System.out.println("compareTo() : " + s.compareTo(t));
		
		// 4) 현재 문자열에 주어진 문자열 결합 
		System.out.println("concat() : " + str.concat(" 사실 구라야."));
		
		// 5) 주어진 문자를 포함하고 있는지 확인 -> 포함 true, 불포함 false
		System.out.println(str.contains("a"));
		
		// 6) 주어진 문자를 접미사로 하는지 확인
		System.out.println(str.endsWith("sing!"));

		// 7) 같은 문자열인지 비교
		System.out.println(str.equals(str));
		
		// 8) 주어진 문자가 처음으로 나타나는 인덱스 반환 -> 포함 x 시 -1
		System.out.println(str.indexOf("r"));
		
		// 9) 현재 문자열이 비어 있는지 확인
		System.out.println(str.isEmpty());
		
		// 10) 주어진 문자가 마지막으로 나타나는 인덱스 반환 -> 없다면 -1
		System.out.println(str.lastIndexOf("a"));

		// 11) 현재 문자열에서 주어진 문자를 새로운 문자로 대체
		System.out.println(str.replace("dream", "girl"));
		
		// 12) 주어진 정규 표현식을 기준으로 분할해 문자열 배열 반환
		String[] ttt = str.split(" ");
		for(String i:ttt) System.out.print(i + "_");
		System.out.println();

		// 13) 주어진 인덱스부터 끝까지의 부분 문자열 반환
		System.out.println(str.substring(5));

		// 14) 주어진 인덱스 ~ 인덱스 부분 문자열 반환
		System.out.println(str.substring(4, 6));

		// 15) 모두 소문자 변환
		String nam = "FUCK!";
		System.out.println(nam.toLowerCase());
		
		// 16) 모두 대문자 변환
		nam = "suicide youtself";
		System.out.println(nam.toUpperCase());
		
		// 17) 양쪽 끝 공백 제거
		String sen = "   ddd    ooo    qq  ";
		System.out.println(sen.trim());

	}

}
